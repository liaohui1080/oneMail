var oneMail = angular.module("oneMail", ['ui.router', 'ngFileUpload', "ngCookies", 'angular-loading-bar']);var htmlPath = 'build/html';//默认的url参数var $urlServer = "/server/Home";var userGrop = '游客';var $url = {    index: $urlServer, //网站首页    indexOpenMail: $urlServer + "/index/indexOpenMail", //网址首页面显示的公开信    ip: 'http://www.ip138.com/ip2city.asp', //获取ip位置    sigIn: $urlServer + "/index/sigIn", //登陆    sigUp: $urlServer + "/index/sigUp", //注册    sigOut: $urlServer + "/index/sigOut", //退出    pengyouList: $urlServer + "/index/friendList", //获取好友列表    userMailList: $urlServer + "/index/userMailList", //获取单个用户的来往信件列表    getopenMail: $urlServer + "/index/openMail", //获取公开信    addMailOne: $urlServer + "/index/addMailOne", //发送一封私人信件    getuserMailOne: $urlServer + "/index/getuserMailOne", //获取一封私人邮件,并把收信时间更新,只能看自己发送的或者自己接受的 邮件    addMailAll: $urlServer + "/index/addMailAll", //增加一封公开信    setWeizhi: $urlServer + "/index/setWeizhi", //设置用户位置    getUserData: $urlServer + "/index/getUserData", //获取登陆用户的信息    userNameUp: $urlServer + "/index/userNameUp", //修改名字    upUserImg: $urlServer + "/index/upUserImg", //更新头像    userMailWeidu: $urlServer + "/index/userMailWeidu", //查看用户未读邮件    getUserGrop: $urlServer + "/index/getUserGrop", //查看用户所在组    userPassUp: $urlServer + "/index/userPassUp", //修改密码    getIP: "http://188.166.241.202:8080/server/home/index/getIP", //修改密码    //};/* * store 本地存储变量说明 所有前缀是 st_的数据都是存储在本地的 * * st_userData = 登陆用户的信息 * st_openMail = 当前公开邮件的所有数据 * st_pageOpenMail = 1 ,这是公开邮件的分页参数 *  st_url= 获取当前的url,只获取#号后面的 * * * */oneMail.directive('wangeditor', function () {    return {        restrict: 'EA',        template: '<textarea id="textarea1"></textarea>',        replace: true,        link: function (scope, elem, attr) {            //console.log(elem);            $(elem).wangEditor({                'menuConfig': [                    ['bold', 'underline', 'blockquote', 'justify', 'createLink', 'undo'],                    ['insertImage', 'insertCode'],                    ['undo', 'redo', 'fullScreen'],                ]            });        }    };});//var pages;oneMail.directive('fenyeopenmail', function ($http, $stateParams, $location, $cookieStore, cfpLoadingBar) {    return {        restrict: 'EA',        template: '<span class="btn"  ng-click="prev()" >上页</span>' +        '<span class="btn" ng-click="next()" >下页</span>',        link: function (scope, elem, attr) {            cfpLoadingBar.start(); //显示进度条            var indexOpenMail = store.get("st_indexOpenMailData");            var pages = parseInt($stateParams.page); //把分页转换为数字int            if (!pages) {                pages = 1;            }            var path = attr.href; //设置跳转路径            scope.countPage = ''; //初始化当前总页数            //上一页            scope.prev = function () {                if (pages > 1) {                    pages -= 1;                    $location.path(path + pages)                }                //清除网站首页公开邮件数据                store.remove('st_indexOpenMailData');                console.log(pages)            };            //下一页            scope.next = function () {                if (pages < scope.countPage) {                    pages += 1;                    $location.path(path + pages);                    console.log(pages)                }                //清除网站首页公开邮件数据                store.remove('st_indexOpenMailData');            };            //获取公开信            httpFn({                http: $http,                method: "get",                url: $url.getopenMail,                data: {page: pages},                success: function (msg) {                    if (msg.zhuangtai) {                        console.log(msg);                        cfpLoadingBar.complete(); //取消进度条                        //如果网站首页公开邮件数据存在,则登陆以后直接显示这个邮件的内容                        if (indexOpenMail) {                            scope.openMailVal = indexOpenMail;                        } else {                            scope.openMailVal = msg.data.data; //给页面赋值                        }                        scope.countPage = msg.data.tongji.count_page; //设置当前总页数                        $cookieStore.put("ck_pageOpenMail", pages); //储存当前页数                        store.set("st_openMailData", scope.openMailVal); //存储当前openMail数据                    }                },                error: function (error) {                    console.log(error);                }            });            //scope.$apply();        }    }});oneMail.directive('fenyeusermaillist', function ($http, $stateParams, $location, cfpLoadingBar) {    return {        restrict: 'EA',        template: '<span class="btn"  ng-click="prev()" >上页</span>' +        '<span class="btn" ng-click="next()" >下页</span>',        link: function (scope, elem, attr) {            cfpLoadingBar.start(); //显示进度条            var pages = parseInt($stateParams.page); //把分页转换为数字int            if (!pages) {                pages = 1;            }            var path = attr.href + $stateParams.mailKey + "/"; //设置跳转路径            scope.countPage = ''; //初始化当前总页数            console.log(path);            //上一页            scope.prev = function () {                if (pages > 1) {                    pages -= 1;                    $location.path(path + pages)                }                console.log(pages)            };            //下一页            scope.next = function () {                if (pages < scope.countPage) {                    pages += 1;                    $location.path(path + pages);                    console.log(pages)                }            };            //更新数据            httpFn({                http: $http,                method: "get",                url: $url.userMailList,                data: {userListKey: $stateParams.mailKey, page: pages},                success: function (msg) {                    console.log(msg);                    if (msg.zhuangtai) {                        cfpLoadingBar.complete(); //取消进度条                        scope.mailList = msg.data.data;                        scope.shouxinUser = msg.data.shouxin_user;                        scope.countPage = msg.data.tongji.count_page;                        scope.count = msg.data.tongji.count_data;                    }                },                error: function (error) {                    console.log(error);                }            });            //    scope.$apply();        }    }});/*只显示部分文字筛选器 * 使用方式： {{some_text | cut:true:100:' ...'}} 參數: 切字方式 (布林) - 如果是 true，只切單字。 長度 (整數) - 要保留的最大字數。 後輟 (字串，默认：'…') - 接在字詞的後面。*/oneMail.filter('cut', function () {    return function (value, wordwise, max, tail) {        if (!value) return '';        max = parseInt(max, 10);        if (!max) return value;        if (value.length <= max) return value;        value = value.substr(0, max);        if (wordwise) {            var lastspace = value.lastIndexOf(' ');            if (lastspace != -1) {                value = value.substr(0, lastspace);            }        }        return value + (tail || ' …');    };});//时间格式化过滤器oneMail.filter('timeData', function () {    return function (item) {        Date.prototype.format = function (format) {            var date = {                "M+": this.getMonth() + 1,                "d+": this.getDate(),                "h+": this.getHours(),                "m+": this.getMinutes(),                "s+": this.getSeconds(),                "q+": Math.floor((this.getMonth() + 3) / 3),                "S+": this.getMilliseconds()            };            //获取小时            var h=date['h+'];            //初始化 时间所在            var shijian ='';            if(h>0 && h<3){                shijian="凌晨";                console.log("凌晨");            }else if(h>3 && h<6){                shijian="黎明";                console.log("黎明");            }else if(h>6 && h<9){                shijian="早晨";                console.log("早晨");            }else if(h>9 && h<12){                shijian="上午";                console.log("上午");            }else if(h>12 && h<14){                shijian="中午";                console.log("中午");            }else if(h>14 && h<18){                shijian="下午";                console.log("下午");            }else if(h>18 && h<20){                shijian="傍晚";                console.log("傍晚");            }else if(h>20 && h<0){                shijian="午夜";                console.log("午夜");            }            if (/(y+)/i.test(format)) {                format = format.replace(RegExp.$1, (this.getFullYear() + '').substr(4 - RegExp.$1.length));            }            for (var k in date) {                if (new RegExp("(" + k + ")").test(format)) {                    //format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : ("00" + date[k]).substr(("" + date[k]).length));                    format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : ("00" + date[k]).substr(("" + date[k]).length));                }            }            return format +' '+ shijian;        };        //新建对象        var newDate = new Date();        //设置对象时间        newDate.setTime(item * 1000);        //格式化时间        var timeShuchu =newDate.format('西历 yyyy年MM月dd日');        //var shuchu = newDate.toLocaleString();        //var timeShuchu =newDate.format('yyyy年MM月dd日 h:m:s');        return timeShuchu;    }});//不输出html//<p ng-bind-html="article.title | beSafeHtml"></p>oneMail.filter('noHtml', ['$sce', function ($sce) {    return function (html) {        return $sce.trustAsHtml(html);    };}]);//输出html//<div ng-bind-html="article.content | trustHtml"></div>oneMail.filter('toHtml', ['$sceDelegate', '$sce', function ($sceDelegate, $sce) {    return function (html) {        return $sceDelegate.trustAs($sce.HTML, html);    };}]);oneMail.config(function ($stateProvider, $urlRouterProvider, cfpLoadingBarProvider) {    cfpLoadingBarProvider.includeSpinner = false;    $urlRouterProvider.when("", "/index");    $stateProvider        .state("index", {            url: "/index",            templateUrl: htmlPath + "/index/index.html",        })        .state("sigIn", {            url: "/sigIn",            templateUrl: htmlPath + "/public/sigIn.html",        })        .state("sigOut", {            url: "/sigOut",            templateUrl: htmlPath + "/public/sigOut.html",        })        .state("sigUp", {            url: "/sigUp",            templateUrl: htmlPath + "/public/sigUp.html",        })        .state("openMail", {            url: "/openMail/:page",            templateUrl: htmlPath + "/public/openMail.html",        })        //登陆用户显示首页面        .state("user", {            url: "/user",            templateUrl: htmlPath + "/user/userIndex.html",            controller: function ($location) {                quanping();                $(window).resize(function () {                    quanping()                });            }        })        //设置页面        .state("user.shezhi", {            url: "/shezhi",            views: {                'userRoot': {                    templateUrl: htmlPath + "/user/shezhi.html",                    controller: function ($http) {                        quanping();                        $(window).resize(function () {                            quanping()                        });                        //httpFn({                        //    http: $http,                        //    method: "get",                        //    url: $url.getUserData,                        //                        //    success: function (msg) {                        //                        //        console.log(msg);                        //                        //        if (msg.zhuangtai) {                        //                        //            //存储用户信息到本地                        //            store.set('st_userData', msg.data);                        //                        //        } else {                        //            console.log("你还没有登陆")                        //        }                        //                        //    },                        //    error: function (error) {                        //                        //        console.log(error);                        //    }                        //                        //});                        //$location.path('user/openMail');                    }                }            }        })        //设置页面        .state("user.weiduMail", {            url: "/weiduMail",            views: {                'userRoot': {                    templateUrl: htmlPath + "/user/weiduMail.html",                    controller: function ($location) {                        quanping();                        $(window).resize(function () {                            quanping()                        });                        //$location.path('user/openMail');                    }                }            }        })        //公开信页面        .state("user.openMail", {            url: "/openMail/:page",            views: {                'userRoot': {                    templateUrl: htmlPath + "/public/openMail.html",                }            }        })        //用户来往邮件页面        .state('user.userMailList', {            url: "/userMailList/:mailKey/:page",            views: {                'userRoot': {                    templateUrl: htmlPath + "/user/userMailList.html"                }            }        })        //写信给所有人页面        .state('user.addMailAll', {            url: "/addMailAll",            views: {                'userRoot': {                    templateUrl: htmlPath + "/user/addMailAll.html",                }            }        })        //朋友列表页面        .state('user.haoyouList', {            url: "/haoyouList",            views: {                'userRoot': {                    templateUrl: htmlPath + "/user/haoyouList.html",                }            }        })});//app主页面var rootIndex = function ($scope, $location) {    //设置openMail分页的跳转页面    $scope.openMailPage = "openMail/";    $scope.serverUrl = $url.getopenMail;    addMailShow(false);    $scope.indexDaohang = true;};//网站首页var index = function ($scope, $log, $location, $http, $stateParams, $cookieStore) {    console.log("首页");    addMailShow(false);    //设置要获取的公开信的id    var indexIDs = 1;    //获取公开信    httpFn({        http: $http,        method: "get",        url: $url.indexOpenMail,        data: {indexID: indexIDs},        success: function (msg) {            console.log(msg);            if (msg.zhuangtai) {                //scope.countPage = msg.data.tongji.count_page; //设置当前总页数                $scope.openMailVal = msg.data; //给页面赋值                store.set("st_indexOpenMailData", msg.data); //存储当前openMail数据            }        },        error: function (error) {            console.log(error);        }    });    //写信.这个页面是没有登陆的所以直接跳转到登陆界面    $scope.addMail = function () {        $location.path("sigIn");    };    //检测用户是否登陆    $scope.$on('$stateChangeSuccess', function (evt, next, current) {        //var st_userData = store.get('st_userData');        var st_userData = $cookieStore.get("userData");        console.log("$stateChangeSuccess首页");        if (st_userData) {            $location.path("user/openMail/");        }    });};//用户登陆首页var userIndex = function ($scope, $state, $location, $http, $stateParams, $cookieStore, cfpLoadingBar) {    //设置openMail分页的跳转页面    $scope.openMailPage = "user/openMail/";    //获取用户信息    $scope.userData = store.get('st_userData');    //隐藏首页导航    $scope.indexDaohang = false;    ////返回userinde首页, 把openMail分页数清除    $scope.backUserIndex = function () {        $state.go('user.openMail', {page: 1});    };    $('[data-toggle="tooltip"]').tooltip()    //获取未读邮件数    var weiduMail = function () {        //获取未读邮件        httpFn({            http: $http,            method: "get",            url: $url.userMailWeidu,            success: function (msg) {                $scope.weiduMailCount = msg.data.count;                console.log(msg);            },            error: function (error) {                console.log(error);            }        });    };    setInterval(function () {        $scope.$apply(weiduMail);    }, 60000);    weiduMail();    $scope.$on('$stateChangeSuccess', function (evt, next, current) {        // 数据reload        console.log("$stateChangeSuccess");        weiduMail();    });    //用户子视图调用的方法 未读邮件数    $scope.fnWeiduMailCount = function () {        $scope.weiduMailCount = 0;    };    //显示写信界面    $scope.addMailXuanze = function () {        console.log("对话框");        $('#myModal').modal('show');        $scope.myModal = "src/html/user/addMailXuanze.html";    };    //如果用户没有登陆,就跳转到首页    $scope.$on('$stateChangeSuccess', function (evt, next, current) {        //var st_userData = store.get('st_userData');        var st_userData = $cookieStore.get("userData");        if (!st_userData) {            $location.path("index");        }    });};//公开邮件页面var openMail = function ($scope, $rootScope, $location, $http, $stateParams, $cookieStore, cfpLoadingBar) {    console.log("公开邮件页面");    quanping();    $(window).resize(function () {        quanping()    });    addMailShow(false);    //写信    $scope.addMail = function () {        //获取公开信数据        var st_openMail = store.get('st_openMailData');        //获取登陆用户数据        var st_userData = $cookieStore.get('userData');        //清空编辑器内容        $('.wangEditor-textarea').html("");        if (!st_userData) {            $location.path("sigIn");            return this;        }        //检测是否再给自己写信        if (st_userData.id == st_openMail.user_id) {            lhAlert(".alert-danger", {                maxTop: 20,                miniTop: 10,                time: 3000,                val: '亲爱的,你不能给自己写信的'            });            return this;        } else {            addMailShow(true);            $scope.userRight = "src/html/public/addMail.html";            //给写信对象赋值            $scope.addMail.duixiang = st_openMail.user.name;        }    };    //不发送    $scope.addNoFasong = function () {        console.log("openMail === noFasong")        addMailShow(false);        $scope.addMail.mailNeirong = "";    };    //发出信件    $scope.addFasong = function () {        console.log("openMail222 === fasong")        var st_openMail = store.get('st_openMailData');        var mail_neirong = $('#textarea1').val();        cfpLoadingBar.start(); //显示进度条        httpFn({            http: $http,            method: "post",            url: $url.addMailOne,            data: {mailNeirong: mail_neirong, toUserID: st_openMail.user_id, openMailID: st_openMail.id},            success: function (msg) {                cfpLoadingBar.complete();                console.log(msg);                if (msg.zhuangtai) {                    //获取用户来往邮件                    lhAlert(".alert-success", {                        maxTop: 20,                        miniTop: 10,                        time: 3000,                        val: '成功写好了'                    });                    addMailShow(false);                }            },            error: function (error) {                console.log(error);            }        });    };};//登陆用户和发信人的来往邮件列表var userMailList = function ($scope, $location, $http, $cookieStore, $stateParams) {    $(window).resize(function () {        quanping()    });    quanping();    //隐藏弹出层    $('#myModal').modal('hide');    addMailShow(false);    console.log("userMailList");    $scope.userData = '';    //如果用户没有登陆,就跳转到首页    $scope.$on('$stateChangeSuccess', function (evt, next, current) {        $scope.userData = $cookieStore.get("userData");    });    //给分页赋值    $scope.userMailListPage = "user/userMailList/";    //不发送信件了    $scope.addNoFasong = function () {        console.log("openMail === noFasong")        addMailShow(false);        $scope.addMail.mailNeirong = "";    };    //写信    $scope.addMail = function () {        addMailShow(true);        $scope.userRight = "src/html/public/addMail.html";        //给写信对象赋值        $scope.addMail.duixiang = $scope.shouxinUser.name;        //清空编辑器内容        $('.wangEditor-textarea').html("");    };    //发送信件    $scope.addFasong = function () {        console.log($scope.shouxinUser);        console.log("回复用户信件");        var mail_neirong = $('#textarea1').val();        var shouxinUserID = $scope.shouxinUser.id;        console.log(mail_neirong);        var newMail = {            "mail_neirong": mail_neirong,            "faxin_time_int": 0,            "faxin_user": {                "name": $scope.userData.name,                "id": $scope.userData.id,            },            "shouxin_user": {                "name": $scope.shouxinUser.name,            }        };        httpFn({            http: $http,            method: "post",            url: $url.addMailOne,            data: {mailNeirong: mail_neirong, toUserID: shouxinUserID},            success: function (msg) {                console.log(msg);                if (msg.zhuangtai) {                    //给maillist 列表增加新数据局                    $scope.mailList.unshift(newMail);                    lhAlert(".alert-success", {                        maxTop: 20,                        miniTop: 10,                        time: 3000,                        val: '成功写好了'                    });                    addMailShow(false);                }            },            error: function (error) {                console.log(error);            }        });    };    //获取一封未读邮件    $scope.getMailOne = function (id, index) {        console.log(id);        console.log(index);        //$scope.mailList[index].shouxin_time_int=1000;        //console.log($scope.mailList[index]);        httpFn({            http: $http,            method: "get",            url: $url.getuserMailOne,            data: {mailID: id},            success: function (msg) {                console.log(msg);                if (msg.zhuangtai) {                    //获取用户来往邮件                    $scope.mailList[index].shouxin_time_int = msg.data.shouxin_time_int;                    if ($scope.weiduMailCount == 0) {                        $scope.fnWeiduMailCount();                    }                }            },            error: function (error) {                console.log(error);            }        });    }};//写邮件function addMail(cfpLoadingBar) {    cfpLoadingBar.start();    console.log("addMail");    quanping();    $(window).resize(function () {        quanping()    });    cfpLoadingBar.complete();}//写邮件选择var addMailXuanze = function ($scope, $location, $http, cfpLoadingBar) {    console.log("addMailXuanze");    //addMailShow(true);    cfpLoadingBar.start();    //获取好友列表    httpFn({        http: $http,        method: "get",        url: $url.pengyouList,        success: function (msg) {            cfpLoadingBar.complete();            console.log(msg);            $scope.pengyouList = msg.data;        },        error: function (error) {            console.log(error);        }    });};//给所有人写信var addMailALl = function ($scope, $location, $http, cfpLoadingBar) {    $('#myModal').modal('hide');    console.log("addMailALl");    // addMailShow(true);    getUrl();    //自运行这个方法,以便于 能使用 $scope.addMail 这个变量    ($scope.addMail = function () {        $scope.addMail.duixiang = "所有人";        $scope.userRight = "src/html/public/addMail.html";    })();    $scope.addNoFasong = function () {        $location.path(store.get('st_url'));    };    $scope.addFasong = function () {        console.log("addMailALl === fasong")        cfpLoadingBar.start();        httpFn({            http: $http,            method: "post",            url: $url.addMailAll,            data: {mailNeirong: $('#textarea1').val()},            success: function (msg) {                cfpLoadingBar.complete();                console.log(msg);                if (msg.zhuangtai) {                    //获取用户来往邮件                    lhAlert(".alert-success", {                        maxTop: 20,                        miniTop: 10,                        time: 3000,                        val: '成功写好了'                    });                    $location.path(store.get('st_url'));                }            },            error: function (error) {                console.log(error);            }        });    };};//好友列表var haoyouList = function ($scope, $location, $http, cfpLoadingBar) {    quanping();    $(window).resize(function () {        quanping()    });    cfpLoadingBar.start();    //获取好友列表    httpFn({        http: $http,        method: "get",        url: $url.pengyouList,        success: function (msg) {            cfpLoadingBar.complete();            console.log(msg);            $scope.pengyouList = msg.data;        },        error: function (error) {            console.log(error);        }    });};//登陆var sigIn = function ($scope, $location, $http, $cookieStore, cfpLoadingBar) {    cfpLoadingBar.start();    cfpLoadingBar.complete();    $scope.fnSigIn = function () {        cfpLoadingBar.start();        httpFn({            http: $http,            method: "get",            url: $url.sigIn,            data: {"userMail": $scope.userMail, "userPass": $scope.userPass},            success: function (msg) {                cfpLoadingBar.complete();                console.log(msg);                if (msg.zhuangtai) {                    console.log("dengluchenggong")                    //存储用户信息到本地                    //store.set('st_userData', msg.data);                    $location.path('user/openMail/' + $cookieStore.get("ck_pageOpenMail"));                }            },            error: function (error) {                console.log(error);            }        });    };    //返回首页面的公开邮件页面    $scope.backIndex = function () {        $location.path('openMail/' + $cookieStore.get("ck_pageOpenMail"));    }};//退出var sigOut = function ($scope, $location, $http, $cookieStore, cfpLoadingBar) {    $scope.fnSigOut = function () {        cfpLoadingBar.start();        httpFn({            http: $http,            method: "get",            url: $url.sigOut,            success: function (msg) {                cfpLoadingBar.complete();                //store.remove("st_userData");                $cookieStore.remove('ck_pageOpenMail');                $cookieStore.remove('indexID');                $cookieStore.remove('st_openMailData');                $location.path('index');                console.log(msg);            },            error: function (error) {                console.log(error);            }        });    }};var sigUp = function ($scope, $stateParams, $location, $http, $cookieStore, cfpLoadingBar) {    $scope.userMail = '';//为其指定一个初始值，这样在html里引用时才不会因为parent scope里没有找到`fen`变量而重新创建一个    $scope.userPass = '';    $scope.fnSigUp = function () {        cfpLoadingBar.start();        httpFn({            http: $http,            method: "get",            url: $url.sigUp,            data: {"userMail": $scope.userMail, "userPass": $scope.userPass},            success: function (msg) {                cfpLoadingBar.complete();                console.log(msg);                if (msg.zhuangtai) {                    //存储用户信息到本地                    //store.set('st_userData', msg.data);                    $location.path('user/openMail/' + $cookieStore.get("ck_pageOpenMail"));                }            },            error: function (error) {                console.log(error);            }        });    };    console.log("增加用户");};var shezhi = function ($scope, $stateParams, $location, $http, Upload, $cookieStore, cfpLoadingBar) {    console.log('shezhi');    cfpLoadingBar.start();    //$scope.userData = store.get('st_userData');    $scope.userData = $cookieStore.get("userData");    console.log($scope.userData);    $scope.gengxin = false;    $scope.gengxinBtn = '更新地址';    cfpLoadingBar.complete();    //更新名字    $scope.fnUpName = function (c) {        if (c == 1) {            $scope.upName = true;        } else if (c == 2) {            httpFn({                http: $http,                method: "get",                url: $url.userNameUp,                data: {userName: $scope.newName},                success: function (msg) {                    console.log(msg);                    if (msg.zhuangtai) {                        $scope.userData.name = $scope.newName;                        //store.set('st_userData', $scope.userData);                        $cookieStore.put('userData', $scope.userData);                        $scope.upName = false;                    }                },                error: function (error) {                    var d = error("服d务器错误")                    console.log(d);                }            });        }    };    //更新位置    $scope.fnDingwei = function () {        cfpLoadingBar.start();        $scope.gengxin = true;        $scope.gengxinBtn = '更新中...';        $.ajax({            type: "get",            url: $url.getIP + "?callback=success_jsonpCallback",            dataType: "jsonp",            jsonp: "callback",//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(默认为:callback)            //jsonpCallback:"success_jsonpCallback",//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名            success: function (msg) {                cfpLoadingBar.complete();                //获取客户ip成功                if (msg.zhuangtai) {                    console.log(msg.data);                    httpFn({                        http: $http,                        method: "get",                        url: $url.setWeizhi,                        data: {ip: msg.data},                        success: function (msg) {                            console.log(msg);                            if (msg.zhuangtai) {                                $scope.userData.weizhi = msg.data.weizhi;                                $cookieStore.put('userData', $scope.userData);                                $scope.gengxinBtn = '更新地址';                                $scope.gengxin = false;                            } else {                                lhAlert(".alert-danger", {                                    maxTop: 20,                                    miniTop: 10,                                    time: 3000,                                    val: '更新失败'                                });                                $scope.gengxinBtn = '更新地址';                                $scope.gengxin = false;                            }                        },                        error: function (error) {                            lhAlert(".alert-danger", {                                maxTop: 20,                                miniTop: 10,                                time: 3000,                                val: '服务器错误'                            });                            var d = error("服d务器错误")                            console.log("服务器错误");                        }                    });                } else {                    cfpLoadingBar.complete();                    lhAlert(".alert-danger", {                        maxTop: 20,                        miniTop: 10,                        time: 3000,                        val: '获取位置失败'                    });                }            },            error: function (err) {                cfpLoadingBar.complete();                console.log(err);                lhAlert(".alert-danger", {                    maxTop: 20,                    miniTop: 10,                    time: 3000,                    val: '获取位置失败'                });            }        });        //httpFn({        //    http: $http,        //    method: "get",        //    url: $url.setWeizhi,        //    success: function (msg) {        //        console.log(msg);        //        cfpLoadingBar.complete();        //        //        if(msg.zhuangtai){        //            $scope.userData.weizhi = msg.data.weizhi;        //            $cookieStore.put('userData', $scope.userData);        //        //            $scope.gengxinBtn = '更新地址';        //            $scope.gengxin = false;        //        }else{        //            lhAlert(".alert-danger", {        //                maxTop: 20,        //                miniTop: 10,        //                time: 3000,        //                val: '更新失败'        //            });        //            $scope.gengxinBtn = '更新地址';        //            $scope.gengxin = false;        //        }        //        //    },        //    error: function (error) {        //        lhAlert(".alert-danger", {        //            maxTop: 20,        //            miniTop: 10,        //            time: 3000,        //            val: '服务器错误'        //        });        //        var d = error("服d务器错误")        //        console.log("服务器错误");        //    }        //        //});    };    //修改密码    $scope.upPass = function () {        cfpLoadingBar.start();        $scope.passBtnText = true;        httpFn({            http: $http,            method: "get",            url: $url.userPassUp,            data: {userPassOld: $scope.userPassOld, userPass: $scope.userPass},            success: function (msg) {                cfpLoadingBar.complete();                console.log(msg);                if (msg.zhuangtai) {                    lhAlert(".alert-success", {                        maxTop: 20,                        miniTop: 10,                        time: 3000,                        val: "修改密码成功"                    });                } else {                    $scope.passBtnText = false;                }            },            error: function (error) {            }        });    }    //更新头像    $scope.upUserImg = function (c) {        console.log("更新头像");        $('#upUserImg').modal('show');        var drEvent = $('.dropify').dropify({            messages: {                'default': '点击或拖拽文件到这里',                'replace': '重新选择',                'remove': '取消',                'error': '对不起，你上传的文件太大了'            },            tpl: {                wrap: '<div class="dropify-wrapper"></div>',                message: '<div class="dropify-message"><p>{{ default }}</p></div>',                preview: '<div class="dropify-preview"><span class="dropify-render"></span><div class="dropify-infos"><div class="dropify-infos-inner"><p class="dropify-infos-message">{{ replace }}</p></div></div></div>',                filename: '<p class="dropify-filename"></p>',                clearButton: '<button type="button" class="dropify-clear">{{ remove }}</button>',                error: '<p class="dropify-error">{{ error }}</p>'            }        });        drEvent.on('dropify.afterClear', function (event, element) {            $('#upUserImg').modal('hide');        });        // 上传文件        $scope.upload = function (file) {            cfpLoadingBar.start();            Upload.upload({                url: $url.upUserImg,                data: {file: file}            }).then(function (resp) {                cfpLoadingBar.complete();                //上传成功显示这里                $('#upUserImg').modal('hide');                console.log(resp.data);                $scope.userData.image = resp.data.data;                $cookieStore.put('userData', $scope.userData);                //console.log($url.upUserImg);                //console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);            }, function (resp) {                //上传失败显示这里                console.log(resp.data);                console.log('Error status: ' + resp.status);            }, function (evt) {                //上传异常显示这里                console.log(evt);                //var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);                //console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);            });        };    };};var weiduMail = function ($http, $scope, cfpLoadingBar) {    console.log("未读信件");    cfpLoadingBar.start();    //获取未读邮件    httpFn({        http: $http,        method: "get",        url: $url.userMailWeidu,        success: function (msg) {            console.log(msg);            cfpLoadingBar.complete();            $scope.weiduMailList = msg.data.mailList;            $scope.weiduMailCount = msg.data.count;        },        error: function (error) {            console.log(error);        }    });    //获取一封未读邮件    $scope.getMailOne = function (id, index) {        console.log(id);        console.log(index);        httpFn({            http: $http,            method: "get",            url: $url.getuserMailOne,            data: {mailID: id},            success: function (msg) {                console.log(msg);                if (msg.zhuangtai) {                    //获取用户来往邮件                    $scope.weiduMailList[index] = msg.data;                    $scope.weiduMailCount -= 1;                    if ($scope.weiduMailCount == 0) {                        $scope.fnWeiduMailCount();                    }                    //$scope.weiduMailList[index].shouxin_time_int = msg.data.shouxin_time_int;                }            },            error: function (error) {                console.log(error);            }        });    }};oneMail.controller('rootIndex', rootIndex);oneMail.controller('index', index);oneMail.controller('openMail', openMail);oneMail.controller('userIndex', userIndex);oneMail.controller('userMailList', userMailList);oneMail.controller('addMail', addMail);oneMail.controller('addMailXuanze', addMailXuanze);oneMail.controller('addMailALl', addMailALl);oneMail.controller('haoyouList', haoyouList);oneMail.controller('sigIn', sigIn);oneMail.controller('sigOut', sigOut);oneMail.controller('sigUp', sigUp);oneMail.controller('shezhi', shezhi);oneMail.controller('weiduMail', weiduMail);//显示和隐藏 增加信件页面  show = boole值function addMailShow(show) {    if (show) {        $(".user-index-you-neirong .zuo").css({right: 600});        $(".user-index-you-neirong .you").show().css({width: 600});    } else {        $(".user-index-you-neirong .zuo").css({right: 0});        $(".user-index-you-neirong .you").hide();        $(".you").hide();    }}//设置页面全屏function quanping() {    $(".window-height").height($(window).height()); //所有与窗口高度相同的,都用这个 css名字    $(".add-mail-text").height($(window).height() - 110); //}//弹出提示function lhAlert(div, obj) {    var div = $(div);    $(".alert").stop(true, true).hide(0);    div.html(obj.val);    div.css({        top: 10,        Zindex: 999,        left: ($(window).width() - div.width()) / 2    });    div.stop(true, true).animate({        top: obj.maxTop,        opacity: 'show'    }, 300);    setTimeout(function () {        div.stop(true, true).animate({            top: obj.miniTop,            opacity: 'hide'        }, 300);    }, obj.time);}/*  重写的 http方法,增加用户操作权限的判断,post只有按下面写才能提交给php *  http:$http, 把anglar 的$http对象传进来 *  method:"post", //提交数据的方式 post  get *  url:$url.addMailAll,  //url地址 *  data:{"mailNeirong": $scope.mailNeirong},  //提交的数据,要 json格式 *  success: 提交数据成功以后的 回调方法 *  error: 提交数据失败以后的 回调方法 * */function httpFn(o) {    if (o.method == 'post') {        o.http({            headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},            method: o.method,            url: o.url,            params: o.params,            data: jQuery.param(o.data) //把json数据 序列化        }).success(function (data, status, headers, config) {            //判断权限,如果quanxian=1 则无权访问            if (data.quanxian) {                console.log(data);                // window.location.reload();                lhAlert(".alert-danger", {                    maxTop: 20,                    miniTop: 10,                    time: 3000,                    val: data.tishi                });                return this;            } else {                if (!data.zhuangtai) {                    lhAlert(".alert-danger", {                        maxTop: 20,                        miniTop: 10,                        time: 3000,                        val: data.tishi                    });                } else {                    o.success(data, status, headers, config);                }            }        }).error(o.error);    } else if (o.method == 'get') {        o.http({            ignoreLoadingBar: true,            method: o.method,            url: o.url,            params: o.data        }).success(function (data, status, headers, config) {            //判断权限,如果quanxian=1 则无权访问            if (data.quanxian) {                console.log(data);                lhAlert(".alert-danger", {                    maxTop: 20,                    miniTop: 10,                    time: 3000,                    val: data.tishi                });                return this;            } else {                if (!data.zhuangtai) {                    lhAlert(".alert-danger", {                        maxTop: 20,                        miniTop: 10,                        time: 3000,                        val: data.tishi                    });                }                o.success(data, status, headers, config);            }        }).error(o.error);    }}//获取当前的url地址function getUrl() {    var url = window.location.hash;    //获取url的长度    var urlLength = url.length;    var jiqeu = url.substring(1, urlLength);    store.set('st_url', jiqeu);    return jiqeu;}